================================================================================
TEST ISOLATION DIAGNOSTIC REPORT
================================================================================
Total test runs: 7
Passed: 6
Failed: 1

DETAILED RESULTS:
--------------------------------------------------

tests/api/v1/test_auth.py::test_register_and_login: PASS (17.34s)
Exit code: 0

tests/api/v1/test_auth.py::test_me_and_logout: PASS (20.32s)
Exit code: 0

tests/api/v1/test_auth.py::test_register_duplicate_email: PASS (18.91s)
Exit code: 0

tests/api/v1/test_auth.py::test_password_reset_request_and_confirm: PASS (20.19s)
Exit code: 0

GROUP_all_auth_tests: PASS (42.38s)
Exit code: 0

GROUP_problematic_combo: FAIL (6.45s)
Exit code: 4
Error output:
  2025-07-07 01:13:24.705 | INFO     | tests.conftest:pytest_sessionstart:195 - [PYTEST_SESSIONSTART] Session started for worker: main (fast_mode: False)
  2025-07-07 01:13:24.706 | INFO     | tests.conftest:pytest_sessionstart:201 - [PYTEST_SESSIONSTART] Config validation successful for worker: main
  ERROR: not found: C:\Users\00008234\Documents\ReViewPoint\backend\tests\api\v1\test_auth.py::test_register_and_login
  (no match in any of [<Module test_auth.py>])
  
  ...
  (no match in any of [<Module test_auth.py>])
  
  ERROR: not found: C:\Users\00008234\Documents\ReViewPoint\backend\tests\api\v1\test_auth.py::test_register_duplicate_email
  (no match in any of [<Module test_auth.py>])
  
  ...

GROUP_potential_conflicts: PASS (75.28s)
Exit code: 0


ANALYSIS:
--------------------------------------------------
âœ… ISOLATION ISSUE CONFIRMED:
  - Individual tests pass when run alone
  - Same tests fail when run together
  - This indicates test isolation problems

LIKELY CAUSES:
  1. Hardcoded test data (emails, usernames) causing conflicts
  2. Incomplete database cleanup between tests
  3. Shared state in application or test fixtures
  4. Database constraints (unique email, etc.)


RECOMMENDATIONS:
--------------------------------------------------
1. Replace hardcoded emails with UUID-based generation:
   email = f'test-{uuid.uuid4()}@example.com'

2. Ensure proper test cleanup:
   - Use transactional tests that rollback automatically
   - Add explicit cleanup in test teardown

3. Use test-specific data:
   - Generate unique test data for each test
   - Avoid sharing data between tests