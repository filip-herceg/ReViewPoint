name: Security Scan

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/security-scan.yaml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
  workflow_dispatch:
  schedule:
    # Run security scan weekly on Mondays at 3 AM UTC
    - cron: '0 3 * * 1'

permissions:
  contents: read
  security-events: write # Required for GitHub Security tab integration

jobs:
  trivy-scan:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner (filesystem)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: './backend'
          format: 'table'
          output: 'trivy-fs-results.sarif'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
          
      - name: Upload Trivy filesystem scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()  # Upload results even if the previous step fails
        with:
          sarif_file: 'trivy-fs-results.sarif'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/deployment/docker/Dockerfile
          push: false
          load: true
          tags: reviewpoint-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Display image digest
        run: echo "Image digest is ${{ steps.docker_build.outputs.digest }}"
        
      - name: List dependencies from the image
        run: |
          docker run --rm reviewpoint-backend:latest /app/.venv/bin/pip freeze > image-dependencies.txt
          echo "Python dependencies in the built image:"
          cat image-dependencies.txt
          
      - name: Check for outdated dependencies
        run: |
          docker run --rm reviewpoint-backend:latest /app/.venv/bin/pip list --outdated || echo "No outdated packages found"

      - name: Run Trivy vulnerability scanner (Docker image)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'image'
          image-ref: 'reviewpoint-backend:latest'
          format: 'table'
          output: 'trivy-image-results.sarif'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
          timeout: '10m'
          
      - name: Upload Trivy image scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()  # Upload results even if the previous step fails
        with:
          sarif_file: 'trivy-image-results.sarif'
          
      - name: Save artifact of scan results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: trivy-scan-results
          path: |
            trivy-fs-results.sarif
            trivy-image-results.sarif
